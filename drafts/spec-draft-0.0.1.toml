
#=======================================================#
# `.fstoml` F# Project File Specification Version 0.0.1 #
#=======================================================#

# Toplevel Only Properties/Keys

# FsTomlVersion   : string  - Semantic Version Number of fstoml spec compliance
# Name            : string
# AssemblyName    : string  # Name of the dll
# RootNamespace   : string
# Guid            : Guid
# OutputType      : Library | Exe | Winexe | Module
# FSharpCore      : string  - Version Number of FSharp.Core 
# ToolsVersion    : 4.0 | 10.0 | 12.0 | 14.0 | 15.0 # MsBuild version

FsTomlVersion   = '0.0.1.0' 
Name            = 'Library1'
AssemblyName    = 'Library1'
RootNamespace   = 'Library1'
Guid            = 'bb0c6f01-5e57-4575-a498-5de850d9fa6c'
OutputType      = 'Library'
FSharpCore      = '4.4.0.0'

# SrcFile : { (BuildAction : Compile|Content|Resource|EmbeddedResource|None) * (Path:string) 
#             Link : string 
#             Copy : Always|Never|Newest }
#   - { (Compile|Content|Resource|EmbeddedResource|None): string ; Link: string; Copy:(Always|Never|Newest) }
#
# Files - Array of inline tables representing SrcFiles listed in compilation order for the project 
   
Files = [
    { None = "paket.references" },
    { Compile = "src/file.fs" },
    { Compile = "src/file2.fs", Link = "src/uselessLink.fs" },
    { Compile = "src/file3.fs", Sig = "src/file3.fsi" },
    { None    = "src/script.fsx", Private = true },
]  

# Reference : { Include : string; HintPath:string; Name: string; SpecificVersion:bool, CopyLocal:bool } 
# References - Array of inline tables for dll and package references

References = [
    { Include = "System" },
    { Include = "FSharp.Core", CopyLocal = 'Always' },
    { Include = "Fable.Core" },
]

# ProjectRef : { Name : string; Project : Guid ; Private: bool }
# References - Array of inline tables of project dependencies 

ProjectReferences = [
    { Name = Arg, Project = "f3d0b372-3af7-49d9-98ed-5a78e9416098", Private = true },
]
    

# - Configuration Properties (can be overridden) - 
# Tailcalls : bool
# WarningsAsErrors : bool
# Constants : string []
# DebugType : None | PdbOnly | Full
# DebugSymbols : bool
# Optimize : bool
# Prefer32bit : bool
# WarningLevel : 1..5
# OutputPath : string
# DocumentationFile : str#ing
# NoWarn : int []
# OtherFlags : string [ ]

DebugSymbols = true
DebugType = 'full'
Optimize = false
NoWarn = [52, 40]
OtherFlags = [ '--warnon:1182' ]

#  - Configurations -
#   
# [ <TargetFrameworkIdentifier> . <TargetFrameworkVersion> . <Configuration> . <Platform> ]
#
#   Framework Ids   : net | netStandard | netcoreapp
#   Platform        : AnyCpu | x86 | x64
#
#   Framework Versions :
#       net         : v4.5 | v4.5.1 | v4.6 | v4.6.1 | v4.6.2 
#       netcoreapp  : 1.0
#       netstandard : v1.0 | v1.1 | v1.2 | v1.3 | v1.4 | v1.5 | v1.6
#
#   Configuration   : string (typically 'Debug' & 'Release' )

# - Configuration Examples -
    
[ 'netcore'.1.6'.Release ]
    Constants = [ 'RELEASE', 'FABLE' ]
    DebugSymbols = false
    DebugType = 'pdb'
    Optimize = true
    
[ 'netcore'.'1.6'.Release.x86 ]
    OutputPath = "bin/Release/x86"

[ 'netcore'.'1.6'.Release.x64 ]
    OutputPath = "bin/Release/x64"

# - KEY OVERRIDE CONVENTION -
# 
#    keys defined in config apply to all descendents, 
#    but can be overwritten in nested tables 


# - KEY SUBSTITUTION CONVENTION -
#
#    `%(keyName)` or `%keyName` can be used to substitute in the value of any key that's already been defined

# -  ARRAY OPERATOR CONVENTION -
#
#    Arrays have a special prefix operator modification convention

Constants = [ 'FABLE', 'FUNSCRIPT' ]

[ 'netcore'.'v1.6'.Debug ]
    # adds the constant to the values of the existing key
    '+Constants' = [ 'DEBUG' ]
    # removes the constant from the values of the existing key
    '-Constants' = [ 'FUNSCRIPT' ]
```

### Open Questions 

- How to indicate that certain files should only be accesible under a subset of configurations
- Additional Functionality?


  